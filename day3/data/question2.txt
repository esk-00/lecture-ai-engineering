LangChain は、大規模言語モデル (LLM) に基づいてアプリケーションを構築するためのオープンソースフレームワークです。LLM は、大量のデータで事前にトレーニングされた大規模な深層学習モデルで、ユーザーのクエリに対する応答を生成できます。たとえば、質問に答えたり、テキストベースのプロンプトから画像を作成したりします。LangChain は、モデルが生成する情報のカスタマイズ、正確性、関連性を向上させるためのツールと抽象化を提供します。たとえば、開発者は LangChain コンポーネントを使用して新しいプロンプトチェーンを構築したり、既存のテンプレートをカスタマイズしたりできます。LangChain には、LLM が再トレーニングなしで新しいデータセットにアクセスできるようにするコンポーネントも含まれています。
LangChain はどのように機能しますか?
LangChain を使用すると、開発者は望ましい結果を生み出すために必要なステップを指定することで、言語モデルを特定のビジネスコンテキストに柔軟に適応させることができます。 

チェーン
チェーンは、コンテキストに応じたレスポンスを提供するための LangChain のさまざまな AI コンポーネントを構成する基本原則です。チェーンとは、ユーザーのクエリからモデルの出力までの一連の自動アクションです。たとえば、開発者は以下の目的でチェーンを使用できます。

さまざまなデータソースへの接続。
ユニークなコンテンツを生成します。
複数の言語を翻訳します。
ユーザークエリへの回答。 
リンク集
チェーンはリンクでできています。開発者がつなぎ合わせて連鎖シーケンスを形成する各アクションは、リンクと呼ばれます。リンクを使用すると、開発者は複雑なタスクを複数の小さなタスクに分割できます。リンクの例には以下が含まれます。

ユーザー入力をフォーマットします。 
LLM にクエリを送信します。 
クラウドストレージからデータを取得しています。
ある言語から別の言語への翻訳。
LangChain フレームワークでは、リンクはユーザーからの入力を受け取り、それを LangChain ライブラリに渡して処理します。LangChain では、リンクを並べ替えてさまざまな AI ワークフローを作成することもできます。 

概要
LangChain を使用するには、開発者は以下のコマンドを使用してフレームワークを Python にインストールします。

pip install langchain

次に、開発者はチェーンビルディングブロックまたは LangChain 表現言語 (LCEL) を使用して、簡単なプログラミングコマンドでチェーンを構成します。chain () 関数はリンクの引数をライブラリに渡します。execute () コマンドは結果を取得します。開発者は現在のリンク結果を次のリンクに渡すか、最終出力として返すことができます。 

以下は、製品の詳細を複数の言語で返すチャットボットチェーン関数の例です。

chain([

retrieve_data_from_product_database().

send_data_to_language_model().

format_output_in_a_list().

translate_output_in_target_language()

])
LangChain のコアコンポーネントにはどのようなものがありますか?
LangChain を使用すると、ソフトウェアチームは次のモジュールでコンテキスト対応言語モデルシステムを構築できます。 

LLM インターフェイス
LangChain は、開発者がコードから LLM に接続してクエリを実行できる API を提供します。開発者は、複雑なコードを記述する代わりに簡単な API コールを行うことで、GPT、Bard、PaLM などのパブリックモデルや独自モデルと LangChain でインターフェースできます。

プロンプトテンプレート
プロンプトテンプレートは、開発者が AI モデルのクエリを一貫して正確にフォーマットするために使用する事前に構築された構造です。開発者は、チャットボットアプリケーションや少量学習用のプロンプトテンプレートを作成したり、言語モデルに特定の指示を提供したりできます。さらに、さまざまなアプリケーションや言語モデルでテンプレートを再利用できます。 

エージェント
開発者は、LangChain が提供するツールとライブラリを使用して、複雑なアプリケーション向けに既存のチェーンを構成およびカスタマイズします。エージェントは、クエリに応じて最適なシーケンスを決定するように言語モデルに求める特別なチェーンです。エージェントを使用する場合、開発者はユーザーの入力、使用可能なツール、および希望する結果を得るための中間ステップを提供します。次に、言語モデルは、アプリケーションが実行できる実行可能な一連のアクションを返します。  

検索モジュール
LangChain を使用すると、言語モデルの応答を絞り込む情報を変換、保存、検索、取得するための多数のツールを備えた RAG システムの設計が可能になります。開発者は、単語を埋め込んで情報のセマンティック表現を作成し、ローカルまたはクラウドベクトルデータベースに保存できます。 

メモリ
会話型言語モデルアプリケーションの中には、過去のやりとりから想起された情報を使って応答を改善するものがあります。LangChain を使用すると、開発者はシステムにメモリ機能を含めることができます。以下をサポートしています。

最新の会話を思い出すシンプルなメモリシステム。 
履歴メッセージを分析して最も関連性の高い結果を返す複雑なメモリ構造。 
コールバック
コールバックは、開発者が LangChain 操作で特定のイベントを記録、監視、ストリーミングするためにアプリケーションに配置するコードです。たとえば、開発者はチェーンが最初に呼び出された日時や、コールバックで発生したエラーを追跡できます。 